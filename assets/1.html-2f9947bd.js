import{_ as p,r as e,o,c,a as s,b as n,d as l,e as a}from"./app-ca4cd4ff.js";const i={},u=a(`<h1 id="css布局" tabindex="-1"><a class="header-anchor" href="#css布局" aria-hidden="true">#</a> CSS布局</h1><p>在前端实际应用开发中免不了会遇到大量的UI布局问题，本次的文章总结了常用的<code>CSS</code>布局技巧，希望可以对大家的开发有些许帮助。</p><h2 id="什么是css布局" tabindex="-1"><a class="header-anchor" href="#什么是css布局" aria-hidden="true">#</a> 什么是CSS布局？</h2><p>在开始前，我们先来介绍一下什么是<code>CSS</code>布局。</p><blockquote><p>CSS 页面布局技术允许我们拾取网页中的元素，并且控制它们相对正常布局流、周边元素、父容器或者主视口/窗口的位置。</p></blockquote><p>简而言之，<code>CSS</code>布局决定了页面上各个元素的摆放方式，以及它们在不同屏幕尺寸和设备上的呈现效果。其最终目标便是创建一个<strong>有组织</strong>、<strong>美观</strong>、<strong>易于导航</strong>和<strong>响应式</strong>的页面。</p><p><code>CSS</code>布局涉及的主要概念和技术包括：</p><ul><li><p><strong>盒模型</strong>：每个HTML元素都是一个盒子，包含内容、内边距、边框和外边距。盒模型定义了这些部分的尺寸和间距。</p></li><li><p><strong>流动布局</strong>：默认情况下，HTML元素会在页面上从左到右、从上到下依次排列。这种排列方式称为流动布局。</p></li><li><p><strong>定位</strong>：通过定位属性（如<code>position</code>）可以将元素相对于其正常流位置进行移动。常见的定位方式有相对定位、绝对定位和固定定位。</p></li><li><p><strong>浮动</strong>：浮动元素会从正常的流动布局中脱离出来，使其他元素可以环绕在其周围。浮动通常用于创建多列布局。</p></li><li><p><strong>Flexbox布局</strong>：<code>Flexbox</code>是一种弹性盒模型，通过<code>display: flex</code>和相关属性，可以实现在一维空间内的灵活布局，使元素沿主轴和交叉轴排列。</p></li><li><p><strong>Grid布局</strong>：<code>Grid</code>布局是二维网格系统，通过<code>display: grid</code>和相关属性，可以实现复杂的布局，将页面划分为行和列，进行精确的定位和对齐。</p></li><li><p><strong>响应式设计</strong>：随着不同屏幕尺寸和设备的出现，布局需要能够适应不同的视口。响应式设计通过媒体查询和弹性单位（如百分比、<code>em</code>、<code>rem</code>）来实现元素的自适应排列和尺寸。</p></li><li><p><strong>层叠顺序</strong>：通过<code>z-index</code>属性，可以控制元素的层叠顺序，使某些元素位于其他元素之上或之下。</p></li><li><p><strong>媒体查询</strong>：媒体查询允许根据不同的媒体特性（如屏幕宽度、设备类型等）应用不同的样式，以实现响应式布局。</p></li></ul><p>在实际的应用开发中，我们会用到各种各样的布局技巧，本文将着重介绍几个常用的布局技巧。</p><h2 id="浮动布局-float" tabindex="-1"><a class="header-anchor" href="#浮动布局-float" aria-hidden="true">#</a> 浮动布局（float）</h2><h3 id="属性简介" tabindex="-1"><a class="header-anchor" href="#属性简介" aria-hidden="true">#</a> 属性简介</h3><p>在<code>CSS</code>中，浮动布局是一种早期用于创建多列布局的技术。虽然由于其一些缺点和复杂性，其基本已被如<code>Flexbox</code>和<code>Grid</code>的现代布局方式取代了。不过在某些特定的情况下，还是可以利用浮动布局的属性快速实现一些简单的业务需求。</p><p>以下简要介绍一些与浮动布局相关的属性：</p><ul><li><code>float</code>: 用于指定元素应该浮动在其容器的左侧或右侧，可以取值为 &quot;left&quot;、&quot;right&quot; 或 &quot;none&quot;。</li><li><code>clear</code>: 用于控制元素在浮动元素旁边显示的方式。可以取值为 &quot;left&quot;、&quot;right&quot;、&quot;both&quot; 或 &quot;none&quot;。</li></ul><h3 id="应用实例" tabindex="-1"><a class="header-anchor" href="#应用实例" aria-hidden="true">#</a> 应用实例</h3><p>这是一个基于浮动的多栏布局示例，通过设置三个栏目的宽度为33.33%和浮动来实现。这种布局适用于创建简单的多列布局，比如新闻网站的导航和内容区域。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>左侧栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>主内容区<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>右侧栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.column1,.column2,.column3</span> <span class="token punctuation">{</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 33.33%<span class="token punctuation">;</span>
    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/float1.png" alt="float1"></p><p>此外，可以通过设置<code>clear</code>属性来清除浮动，以下为<code>clear</code>属性作用在不同元素下的效果展示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.column2</span> <span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/float2.png" alt="float2"></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.column3</span> <span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/float3.png" alt="float3"></p><p>在最后，还是强烈建议使用更现代的布局技术，如<code>Flexbox</code>和<code>Grid</code>，来创建更灵活和可维护的布局。这些技术提供了更直观和强大的布局能力，以及更少的副作用和兼容性问题。</p><h2 id="弹性盒子布局-flexbox" tabindex="-1"><a class="header-anchor" href="#弹性盒子布局-flexbox" aria-hidden="true">#</a> 弹性盒子布局（flexbox）</h2><h3 id="属性介绍" tabindex="-1"><a class="header-anchor" href="#属性介绍" aria-hidden="true">#</a> 属性介绍</h3><p>弹性盒子布局（Flexbox）是一种用于在一维空间内进行布局的<code>CSS</code>技术，可以方便地创建灵活的、响应式的布局结构。以下是弹性盒子布局的一些主要属性：</p><ul><li><p><strong>display: flex;</strong></p><ul><li>通过将容器的 <code>display</code> 属性设置为 <code>flex</code>，将容器变为弹性盒子容器，其子元素将成为弹性盒子项目。</li></ul></li><li><p><strong>flex-direction: row | row-reverse | column | column-reverse;</strong></p><ul><li>定义弹性盒子内子元素的排列方向。</li><li><code>row</code>（默认）：从左到右排列（水平排列）。</li><li><code>row-reverse</code>：从右到左排列（水平排列）。</li><li><code>column</code>：从上到下排列（垂直排列）。</li><li><code>column-reverse</code>：从下到上排列（垂直排列）。</li></ul></li><li><p><strong>flex-wrap: nowrap | wrap | wrap-reverse;</strong></p><ul><li>定义是否允许子元素换行。</li><li><code>nowrap</code>（默认）：不换行，子元素会在一行内尽可能排列。</li><li><code>wrap</code>：允许子元素换行，溢出容器的子元素会在新行上排列。</li><li><code>wrap-reverse</code>：允许子元素换行，但反向排列。</li></ul></li><li><p><strong>justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly;</strong></p><ul><li>定义子元素在主轴上的对齐方式。</li><li><code>flex-start</code>（默认）：靠主轴起始边对齐。</li><li><code>flex-end</code>：靠主轴末尾边对齐。</li><li><code>center</code>：在主轴上居中对齐。</li><li><code>space-between</code>：在子元素之间均匀分布空间，首个子元素靠主轴起始边，末尾子元素靠主轴末尾边。</li><li><code>space-around</code>：在子元素周围均匀分布空间，包括首尾子元素两侧的空间。</li><li><code>space-evenly</code>：在子元素周围以相等的间距分布空间。</li></ul></li><li><p><strong>align-items: flex-start | flex-end | center | baseline | stretch;</strong></p><ul><li>定义子元素在交叉轴上的对齐方式。</li><li><code>flex-start</code>：靠交叉轴起始边对齐。</li><li><code>flex-end</code>：靠交叉轴末尾边对齐。</li><li><code>center</code>：在交叉轴上居中对齐。</li><li><code>baseline</code>：按照第一行文本的基线对齐。</li><li><code>stretch</code>（默认）：子元素在交叉轴上被拉伸以填充容器。</li></ul></li><li><p><strong>align-content: flex-start | flex-end | center | space-between | space-around | stretch;</strong></p><ul><li>定义多根轴线的对齐方式（当有多行或列的情况下）。</li><li><code>flex-start</code>：靠交叉轴起始边对齐。</li><li><code>flex-end</code>：靠交叉轴末尾边对齐。</li><li><code>center</code>：在交叉轴上居中对齐。</li><li><code>space-between</code>：在轴线之间均匀分布空间。</li><li><code>space-around</code>：在轴线周围均匀分布空间。</li><li><code>stretch</code>（默认）：轴线被拉伸以填充容器。</li></ul></li><li><p><strong>flex: none | [flex-grow] [flex-shrink] [flex-basis];</strong></p><ul><li>缩写属性，用于定义弹性盒子项目的放大比例、缩小比例和初始大小。</li><li><code>flex-grow</code>：定义项目的放大比例，默认为0，不放大。</li><li><code>flex-shrink</code>：定义项目的缩小比例，默认为1，允许缩小。</li><li><code>flex-basis</code>：定义项目的初始大小，默认为<code>auto</code>，即根据内容决定。</li></ul></li></ul><h3 id="应用实例-1" tabindex="-1"><a class="header-anchor" href="#应用实例-1" aria-hidden="true">#</a> 应用实例</h3><p>以下示例展示了使用弹性盒子布局创建一个自适应的水平项目列表，项目之间平均分布，适用于导航栏、按钮组等。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>项目1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>项目2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>项目3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token comment">/* 在容器内，项目沿主轴上均匀分布，两端留有空白间距 */</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/* 在容器内，项目在交叉轴上居中对齐 */</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token comment">/* 弹性盒子项目会根据剩余空间等比例分配剩余空间 */</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/flex1.png" alt="flex1"></p><p>通过设置<code>flex-direction</code>属性可以改变排列方向（需注意此时主轴方向变换，<code>justify-content</code>不再表示水平方向，而应表示为垂直方向排列规则）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/flex2.png" alt="flex2"></p><p>设置<code>flex-wrap</code>属性进行换行，在同行（列）剩余空间不足摆放多一个时可以进行自动换行,同时设置<code>flex</code>动态尺寸（这里我们默认设置为1，表示等分），实现响应式布局。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
    <span class="token property">flex-wrap</span><span class="token punctuation">:</span>wrap<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/flex3.png" alt="flex3"></p><p>由于其简单高效的布局功能，<code>Flexbox</code>可以说是实际开发中最受欢迎的高级布局技巧了，利用好<code>Flexbox</code>可以实现高效布局并且兼具响应式的特点。</p><h2 id="网格布局-grid" tabindex="-1"><a class="header-anchor" href="#网格布局-grid" aria-hidden="true">#</a> 网格布局（grid）</h2><h3 id="属性介绍-1" tabindex="-1"><a class="header-anchor" href="#属性介绍-1" aria-hidden="true">#</a> 属性介绍</h3><p>在网页中创建复杂的二维布局时，<code>Grid</code>布局是一个不错的选择。<code>Grid</code>布局将一个容器分割成行和列，然后将内容放置到这些行和列中，从而创建灵活的网格式布局。以下简要介绍一些与网格布局相关的属性：</p><ul><li><p><strong>display: grid;</strong></p><ul><li>通过将容器的 <code>display</code> 属性设置为 <code>grid</code>，将容器变为网格容器，其子元素将成为网格项目。</li></ul></li><li><p><strong>grid-template-columns 和 grid-template-rows:</strong></p><ul><li>用于定义网格的列和行的大小和数量。</li><li><code>grid-template-columns</code>：指定列的大小和数量。</li><li><code>grid-template-rows</code>：指定行的大小和数量。</li><li>例如：<code>grid-template-columns: 100px 200px 1fr;</code> 表示有三列，分别为 100px、200px 和剩余空间的一等分。</li></ul></li><li><p><strong>grid-gap 或 grid-row-gap 和 grid-column-gap:</strong></p><ul><li>用于设置网格项目之间的间距。</li><li><code>grid-gap</code>：同时设置行和列之间的间距。</li><li><code>grid-row-gap</code>：设置行之间的间距。</li><li><code>grid-column-gap</code>：设置列之间的间距。</li></ul></li><li><p><strong>grid-template-areas:</strong></p><ul><li>允许通过指定区域名称的方式来定义网格布局。</li><li>通过创建一个区域名称的矩阵，然后在网格项目中使用 <code>grid-area</code> 属性来引用这些区域名称，从而构建布局。</li></ul></li><li><p><strong>grid-auto-columns 和 grid-auto-rows:</strong></p><ul><li>用于设置没有被显示定义的隐式网格轨道的大小。</li><li><code>grid-auto-columns</code>：定义未显示定义的列的大小。</li><li><code>grid-auto-rows</code>：定义未显示定义的行的大小。</li></ul></li><li><p><strong>grid-auto-flow: row | column | dense;</strong></p><ul><li>定义网格项目如何自动排列。</li><li><code>row</code>：按照行顺序自动排列。</li><li><code>column</code>：按照列顺序自动排列。</li><li><code>dense</code>：尽可能紧凑地填充空白单元格。</li></ul></li><li><p><strong>grid-column 和 grid-row:</strong></p><ul><li>用于将网格项目放置到指定的行和列上。</li><li>通过指定起始和结束的网格线编号或区域名称来定义位置。</li></ul></li><li><p><strong>justify-items 和 align-items:</strong></p><ul><li>分别定义网格项目在单元格内的水平和垂直对齐方式。</li></ul></li><li><p><strong>justify-content 和 align-content:</strong></p><ul><li>分别定义网格容器的内容在容器内的水平和垂直对齐方式。</li></ul></li></ul><h3 id="应用实例-2" tabindex="-1"><a class="header-anchor" href="#应用实例-2" aria-hidden="true">#</a> 应用实例</h3><p>这个示例使用网格布局在容器中创建了一个三列项目布局，简单展示了<code>Grid</code>布局的基本功能。<code>Grid</code>布局适用于呈现项目、产品展示等。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.grid-container</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr 2fr 1fr<span class="token punctuation">;</span> <span class="token comment">/* 3列，中间列宽度是其他列的两倍 */</span>
    <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> 100px 200px<span class="token punctuation">;</span><span class="token comment">/*  声明行的高度  */</span>
    <span class="token property">grid-gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token comment">/*  同时声明行间隙和列间隙  */</span>
<span class="token punctuation">}</span>
<span class="token selector">.grid-item</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000000<span class="token punctuation">;</span>
    <span class="token property">justify-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 在单元格内水平居中对齐 */</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 在单元格内垂直底部对齐 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/grid1.png" alt="grid1"></p><p>除此之外我们也可以通过设置<code>grid-column</code>和<code>grid-row</code>等属性为元素分割区域。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">&gt;</span></span>aside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">&gt;</span></span>article<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.grid-container</span> <span class="token punctuation">{</span>
   <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
   <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span>1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> 100px 200px<span class="token punctuation">;</span>
   <span class="token property">grid-gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">header,aside,article,footer</span> <span class="token punctuation">{</span>
   <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
   <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">header</span> <span class="token punctuation">{</span>
  <span class="token property">grid-column</span><span class="token punctuation">:</span> 1 / 4<span class="token punctuation">;</span> <span class="token comment">/* 跨越整个网格的第1列到第4列 */</span> 
  <span class="token property">grid-row</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* 占据第1行 */</span>
<span class="token punctuation">}</span>
<span class="token selector">article</span> <span class="token punctuation">{</span>
   <span class="token property">grid-column</span><span class="token punctuation">:</span> 2/4<span class="token punctuation">;</span>
   <span class="token property">grid-row</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">aside</span> <span class="token punctuation">{</span>
   <span class="token property">grid-column</span><span class="token punctuation">:</span> 1/2<span class="token punctuation">;</span>
   <span class="token property">grid-row</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">footer</span> <span class="token punctuation">{</span>
   <span class="token property">grid-column</span><span class="token punctuation">:</span> 1 / 4<span class="token punctuation">;</span>
   <span class="token property">grid-row</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/grid2.png" alt="grid2"></p><p>同时，在属性的声明时，我们也可以使用<code>minmax()</code>、<code>repeat()</code>函数及<code>auto-fill</code>属性实现响应式布局。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>auto-fill<span class="token punctuation">,</span> <span class="token function">minmax</span><span class="token punctuation">(</span>200px<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">grid-auto-rows</span><span class="token punctuation">:</span> <span class="token function">minmax</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> auto<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">grid-gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/grid3.png" alt="grid3"></p>`,57),d=s("code",null,"Flexbox",-1),r=s("code",null,"Grid",-1),k=s("code",null,"Grid",-1),g={href:"https://juejin.cn/post/6854573220306255880#heading-2",target:"_blank",rel:"noopener noreferrer"},v=a(`<h2 id="定位布局-position" tabindex="-1"><a class="header-anchor" href="#定位布局-position" aria-hidden="true">#</a> 定位布局（position）</h2><h3 id="属性介绍-2" tabindex="-1"><a class="header-anchor" href="#属性介绍-2" aria-hidden="true">#</a> 属性介绍</h3><p>定位布局允许你从正常的文档流布局中取出元素，并使它们具有不同的行为，例如放在另一个元素的上面，或者始终保持在浏览器视窗内的同一位置。</p><p>定位布局在实现对话框、提示框等弹出式元素时作用显著，且在一些特殊的排版场景下必不可少。以下列举了主要的定位属性：</p><ul><li><strong>静态定位（Static）：</strong> 这是元素的默认定位方式，元素按照文档流正常排列。静态定位的元素不会受到定位属性的影响。</li><li><strong>相对定位（Relative）：</strong> 相对定位使元素相对于其正常位置进行定位，但不会影响其他元素的布局。可以通过设置 <code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code> 属性来调整元素的位置。</li><li><strong>绝对定位（Absolute）：</strong> 绝对定位使元素相对于最近的已定位祖先元素（非静态定位）进行定位。如果没有定位的祖先元素，元素将相对于文档的初始点进行定位。绝对定位的元素不会占据正常的文档流空间，通过设置 <code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code> 属性来精确定位。</li><li><strong>固定定位（Fixed）：</strong> 固定定位使元素相对于浏览器视口进行定位，即使页面滚动，该元素也会保持在固定位置。可以通过设置 <code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code> 属性来进行定位。</li><li><strong>粘性定位（Sticky）：</strong> 粘性定位是相对定位和固定定位的结合，元素在滚动时表现为相对定位，但当滚动达到特定阈值时，元素会变为固定定位。这在创建导航栏等效果时非常有用。</li></ul><p>其中相对定位（<code>relative</code>）不会脱离文档流（<strong>元素依然占据原本的空间</strong>）</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item positioned<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
    <span class="token property">flex-wrap</span><span class="token punctuation">:</span>wrap<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.positioned</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position1.png" alt="position1"></p><p>而绝对定位（<code>absolute</code>）和固定定位（<code>fixed</code>）会脱离文档流（<strong>元素不会占据布局的空间</strong>），其中后两者的区别在于绝对定位相对于<strong>最近的已定位祖先元素</strong>（此处为<code>container</code>元素）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.positioned</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position2.png" alt="position2"></p><p>而固定定位对于<strong>浏览器视口</strong>进行定位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.positioned</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position6.png" alt="position6"></p><p>此外粘性定位则可以在相对定位和绝对定位之间进行转换。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>导航栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 150vh<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">header</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相对定位： <img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position3.png" alt="position3"></p><p>绝对定位： <img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position4.png" alt="position4"></p><p>过度使用定位可能会导致布局混乱，因此在实际项目中需要谨慎使用（能使用<code>Flexbox</code>和<code>grid</code>布局解决的问题就不要使用定位布局）。</p><h3 id="层叠-z-index" tabindex="-1"><a class="header-anchor" href="#层叠-z-index" aria-hidden="true">#</a> 层叠（z-index）</h3><p>定位布局还有一个重要的属性：<code>z-index</code>（层叠），用于控制元素在堆叠上下文中的垂直层次关系。当元素发生重叠时，<code>z-index</code> 可以确定哪个元素位于另一个元素之上或之下。</p><p>使用<code>z-index</code>的一些要领：：</p><ul><li><strong>值的范围和含义：</strong> <code>z-index</code> 属性接受整数值和 <code>auto</code> 值。整数值越大，元素在堆叠上下文中就越靠近顶部，而负值会使元素移动到堆叠上下文的底部。<code>auto</code> 值表示元素的堆叠顺序由其在文档流中的位置决定。</li><li><strong>在定位元素中使用：</strong> <code>z-index</code> 通常在定位（<code>position: absolute</code>、<code>position: relative</code>、<code>position: fixed</code>）元素中使用。定位元素才能参与堆叠上下文，非定位元素的 <code>z-index</code> 设置不会产生效果。</li><li><strong>父子关系：</strong> 父元素的 <code>z-index</code> 值会影响其子元素。子元素的 <code>z-index</code> 值相对于父元素而言，这意味着即使子元素的 <code>z-index</code> 较高，但如果父元素的 <code>z-index</code> 较低，那么子元素仍然无法覆盖父元素之外的其他内容。</li><li><strong>层叠上下文：</strong> 每个元素都会创建一个层叠上下文。具有较高 <code>z-index</code> 值的层叠上下文会覆盖具有较低 <code>z-index</code> 值的层叠上下文中的内容。层叠上下文的形成受到多种因素的影响，包括定位属性、透明度、过渡等。</li><li><strong>相对层叠顺序：</strong> <code>z-index</code> 只在相同的层叠上下文中才有意义。不同层叠上下文的元素无论其 <code>z-index</code> 值如何，都无法跨越不同层叠上下文中的元素。</li></ul><p>以下示例演示了如何使用<code>z-index</code>属性和定位来创建叠放效果，如此应用可以使前景元素浮在背景元素上方，从而产生立体感。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>back<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>背景元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>front<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>前景元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.back</span> <span class="token punctuation">{</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.front</span> <span class="token punctuation">{</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/position5.png" alt="position5"></p><p>虽然，<code>z-index</code>可以很好地控制元素在垂直层叠上下文中的显示顺序，但是过度使用和不正确的使用可能会导致预期之外的结果。因此，在使用<code>z-index</code>前，一定要理解元素之间的关系，以便正确地控制页面元素的显示层次。</p><h2 id="媒体查询-media" tabindex="-1"><a class="header-anchor" href="#媒体查询-media" aria-hidden="true">#</a> 媒体查询（@media）</h2><p>媒体查询允许开发者根据设备的特性和屏幕尺寸应用不同的样式规则，创建响应式的网页设计，以适应不同设备和视口尺寸，从而提供更好的用户体验。</p><p>媒体查询的主要思想是根据媒体特性设置条件，如果这些条件满足，就会应用特定的样式规则。常见的媒体特性包括屏幕宽度、高度、设备方向、分辨率、媒体类型等。以下简单介绍使用媒体查询的步骤：</p><ol><li><strong>在样式表中定义媒体查询：</strong> 使用<code>@media</code>规则来定义媒体查询，指定要应用样式的条件。</li><li><strong>设置媒体查询条件：</strong> 在<code>@media</code>规则内部，使用媒体特性和相关值来设置应用样式的条件。例如，可以根据最大宽度或最小分辨率来设置条件。</li><li><strong>在条件满足时应用样式：</strong> 在满足媒体查询条件时，样式规则就会生效，从而实现适应不同设备和屏幕尺寸的布局和外观变化。</li></ol><p>以下示例展示了如何通过媒体查询在小屏幕设备上调整盒子的颜色，以确保内容在不同屏幕尺寸下的展示效果。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>盒子内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
    <span class="token selector">.box</span> <span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当屏幕宽度小于<code>768px</code>时：</p><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/media1.png" alt="media1"></p><p>当屏幕宽度大于<code>768px</code>时：</p><p><img src="http://eddiehuang.oss-cn-guangzhou.aliyuncs.com/images/media2.png" alt="media2"></p><p>媒体查询是构建响应式设计的关键工具，使开发者能够根据不同的设备和屏幕尺寸提供适当的样式和布局，以确保网页在各种环境下都能良好地呈现。为了更好地进行响应式开发中，学会媒体查询的技能必不可少。</p>`,42);function m(b,h){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[n("虽然在实际开发中很多人可能会因为上手难度更低选择"),d,n("，但是单论能力的话，"),r,n("布局可以说是最强的。如果大家对"),k,n("布局感到兴趣，并想深入学习，[推荐]("),s("a",g,[n("最强大的 CSS 布局 —— Grid 布局 - 掘金 (juejin.cn)"),l(t)]),n(")")]),v])}const y=p(i,[["render",m],["__file","1.html.vue"]]);export{y as default};
